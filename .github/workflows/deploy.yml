name: Deploy Resume Website

on:
  push:
    branches:
      - main

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          # Scan Terraform files and only fail the build for high-severity issues.
          command: iac test --severity-threshold=high

  deploy:
    runs-on: ubuntu-latest
    needs: security # This line makes the deploy job wait for the security job to succeed
    permissions:
      id-token: write 
      contents: read  

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::652050676184:role/GitHubActionsDeployRole
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Invalidate CloudFront Cache
        run: |
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          echo "Found Distribution ID: $DISTRIBUTION_ID"
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

